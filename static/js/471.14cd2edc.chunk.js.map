{"version":3,"file":"static/js/471.14cd2edc.chunk.js","mappings":"gMACA,EAA4B,6BAA5B,EAA2E,mCAA3E,EAA+H,kCAA/H,EAAoL,oC,qDCApL,GAAgB,WAAa,+BAA+B,iBAAmB,qCAAqC,kBAAoB,sCAAsC,gBAAkB,qC,SCMjL,SAASA,EAAT,GAA6C,IAAvBC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,OAE9C,GAAsCC,EAAAA,EAAAA,UAASF,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAsBA,OAEQ,gBAAKC,UAAWC,EAAAA,WAAhB,UACI,kBAAMD,UAAWC,EAAAA,iBAAsBC,SAnB7B,SAAAC,GACpBA,EAAEC,iBACyB,KAAvBN,EAAYO,OAYhBT,EAAOE,IAXLQ,EAAAA,EAAAA,IAAM,8BAA+B,CACnCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAKf,EAIW,WACI,kBACId,UAAWC,EAAAA,kBACXc,KAAK,OACLC,MAAOlB,EACPmB,aAAa,MACbC,SA7BC,SAAAf,GACnBJ,EAAeI,EAAEgB,cAAcH,MAAMI,cACtC,EA4BmBC,YAAY,eACZC,WAAS,KAGb,mBAAQtB,UAAWC,EAAAA,gBAAqBc,KAAK,SAA7C,UACI,kBAAOf,UAAWC,EAAAA,0BAMzC,CC3Cc,SAASsB,IACpB,OAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEA,GAAsC5B,EAAAA,EAAAA,UACpC4B,EAAaC,IAAI,UAAY,IAD/B,eAAO5B,EAAP,KAAoBC,EAApB,KAGA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAO8B,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAI,UAAWH,IAEvBI,EAAAA,EAAAA,YAAU,WAEHrC,GAGLsC,EAAAA,GAA2BtC,GAAauC,MAAK,SAAAC,GAC3C,GAAgC,IAA5BA,EAASC,QAAQC,OACnB,OAAOlC,EAAAA,EAAAA,IACL,+CAAgD,CAC5CC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAGlBc,EAAUU,EAASC,QAEpB,GACF,GAAE,CAACzC,IAgBJ,OACQ,iCACI,SAACJ,EAAD,CAAYC,YAAaG,EAAaF,OAhB5B,SAAAE,GAEpB+B,EAAS,kBAAD,OAAmB/B,IAC3BC,EAAeD,GACf8B,EAAU,GAEX,KAWW,yBAEKD,IACG,eAAI3B,UAAWC,EAAf,SACK0B,EAAOc,KAAI,SAAAC,GAAK,OAEjB,eAAmB1C,UAAWC,EAA9B,UACI,UAAC,KAAD,CACI0C,GAAE,kBAAaD,EAAME,IACrBC,MAAOd,EAFX,WAKI,gBACIe,IAAG,WAtBxBC,EAsBoCL,EAAMK,YArB7CA,EAAD,yCAE4BA,GADlC,6CAqB+BC,IAAKN,EAAMO,MACXjD,UAAWC,KAElB,eAAID,UAAWC,EAAf,SAAsCyC,EAAMO,YAXxCP,EAAME,IAfxB,IAAAG,CAa0B,UAsB5C,C,sLCtFKG,EAAW,+BACXC,EAAU,mCAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,CAAC,EAA1D,SACyBC,MAAMF,EAAKC,GADpC,YACQhB,EADR,QAEkBkB,GAFlB,iCAGYlB,EAASmB,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAiBC,GAC/B,OAAOV,EAAuB,GAAD,OACxBF,EADwB,gCACQY,EADR,oBACyBX,EADzB,8CAG9B,CAEM,SAASY,EAAQC,GACtB,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,mBAG9B,CAEM,SAASc,EAAWD,GACzB,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,4BACqBb,EADrB,0BAG9B,CAEM,SAASe,IACd,OAAOd,EAAuB,GAAD,OACxBF,EADwB,uCACeC,GAE7C,CAEM,SAASgB,EAAcH,GAE5B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,kBACNc,EADM,oBACab,GAE3C,C","sources":["webpack://goit-react-hw-05-movies/./src/page/SearchBar/SearchBar.module.css?ff4c","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","page/SearchBar/SearchBar.jsx","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviaList\":\"SearchBar_moviaList__1M7J0\",\"moviaList__item\":\"SearchBar_moviaList__item__Gt3gv\",\"moviaList__img\":\"SearchBar_moviaList__img__IlJOP\",\"moviaList__title\":\"SearchBar_moviaList__title__GW+L7\"};","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"SearchForm_searchForm__NsJpF\",\"searchForm__form\":\"SearchForm_searchForm__form__-l1KT\",\"searchForm__input\":\"SearchForm_searchForm__input__i6El6\",\"searchForm__btn\":\"SearchForm_searchForm__btn__BRG3D\"};","import css from './SearchForm.module.css'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState} from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function SearchForm ({moviaSearch, submit}) {\n\n    const [searchMovie, setSearchMovie] = useState(moviaSearch);\n\n    const handlerInput = e => {\n      setSearchMovie(e.currentTarget.value.toLowerCase());\n    };\n\n    const handlerSubmit = e => {\n      e.preventDefault();\n      if (searchMovie.trim() === '') {\n        toast('enter the name of the movie', {\n          position: 'top-right',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n        return;\n      }\n      submit(searchMovie);\n    };\n    return (\n\n            <div className={css.searchForm}>\n                <form className={css.searchForm__form} onSubmit={handlerSubmit}>\n                    <input\n                        className={css.searchForm__input}\n                        type=\"text\"\n                        value={searchMovie}\n                        autoComplete=\"off\"\n                        onChange={handlerInput}\n                        placeholder=\"Search Films\"\n                        autoFocus\n                    >\n                    </input>\n                    <button className={css.searchForm__btn} type=\"submit\">\n                        <label className={css.searchForm__lable}>\n                        </label>\n                    </button>\n                </form>\n            </div>\n    );\n}\n\n\n\nSearchForm.propTypes = {\n    moviaSearch: PropTypes.string,\n    submit: PropTypes.func,\n  };\n","import css from './SearchBar.module.css'\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation, useNavigate } from 'react-router-dom';\nimport * as moviesAPI from 'services/Api';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm/SearchForm';\n\nexport default function SearchBar () {\n    const [searchParams] = useSearchParams();\n \n    const [searchMovie, setSearchMovie] = useState(\n      searchParams.get('query') || ''\n    );\n    const [movies, setMovies] = useState([]);\n   \n    const navigate = useNavigate();\n    const location = useLocation();\n    console.log('search:', location);\n   \n    useEffect(() => {\n     \n      if (!searchMovie) {\n        return;\n      }\n      moviesAPI.getMovieBySearch(searchMovie).then(response => {\n        if (response.results.length === 0) {\n          return toast(\n            'Sorry, no movies were found for your request', {\n                position: 'top-right',\n                autoClose: 3000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n            })\n        }\n        setMovies(response.results);\n        \n      });\n    }, [searchMovie]);\n  \n    const handlerSubmit = searchMovie => {\n     \n      navigate(`/movies/?query=${searchMovie}`);\n      setSearchMovie(searchMovie);\n      setMovies([]);\n     \n    };\n\n    const poster = poster_path => {\n        return !poster_path\n       ? 'https://i.postimg.cc/G2jSRfZG/images.png'\n       : `https://image.tmdb.org/t/p/w300${poster_path}`;\n   };\n\n    return (\n            <>\n                <SearchForm moviaSearch={searchMovie} submit={handlerSubmit}/>\n                <div> \n                     \n                    {movies && (\n                        <ul className={css.moviaList}>\n                            {movies.map(movie => (\n                            \n                            <li key={movie.id} className={css.moviaList__item}>\n                                <NavLink\n                                    to={`/movies/${movie.id}`}\n                                    state={location}\n                                    \n                                >\n                                    <img\n                                        src={`${poster(movie.poster_path)}`}\n                                        alt={movie.title}\n                                        className={css.moviaList__img}\n                                    />\n                                 <h3 className={css.moviaList__title}>{movie.title}</h3>\n                                </NavLink>\n                            </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n            </>\n    );\n}\n\n\n\n\n\n\n/**/","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0069cb276a083aad6acda19b3adb7038';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}"],"names":["SearchForm","moviaSearch","submit","useState","searchMovie","setSearchMovie","className","css","onSubmit","e","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","value","autoComplete","onChange","currentTarget","toLowerCase","placeholder","autoFocus","SearchBar","useSearchParams","searchParams","get","movies","setMovies","navigate","useNavigate","location","useLocation","console","log","useEffect","moviesAPI","then","response","results","length","map","movie","to","id","state","src","poster_path","alt","title","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById"],"sourceRoot":""}