{"version":3,"file":"static/js/888.3ea3958e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/BackButton/BackButton.module.css?d3a5","components/BackButton/BackButton.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"back__btn\":\"BackButton_back__btn__+0odO\",\"back__btn__text\":\"BackButton_back__btn__text__oCPUr\"};","\nimport css from './BackButton.module.css'\nimport { PropTypes } from \"prop-types\";\n\nexport default function BackButton  ({onClick, nameBtn})  {\n    return(\n        <button type=\"button\" onClick={onClick} className={css.back__btn}>\n            <span className={css.back__btn__text}>{nameBtn}</span>\n        </button>\n    );\n};\n\nBackButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    nameBtn: PropTypes.string.isRequired,\n  };","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieDetails__block\":\"MovieDetails_movieDetails__block__ef0U0\",\"movieCard\":\"MovieDetails_movieCard__LWJIF\",\"movieCard__block\":\"MovieDetails_movieCard__block__BV6fs\",\"movieCard__img\":\"MovieDetails_movieCard__img__hEH-T\",\"movieCard__list\":\"MovieDetails_movieCard__list__0hG6a\",\"movieCard__header\":\"MovieDetails_movieCard__header__wQnl+\",\"movieCard__text\":\"MovieDetails_movieCard__text__eIxKN\",\"movieCard__additionalBlock\":\"MovieDetails_movieCard__additionalBlock__HaKep\",\"movieCard__additional\":\"MovieDetails_movieCard__additional__r5Cf8\",\"movieCard__additionalText\":\"MovieDetails_movieCard__additionalText__bj+s9\"};","\nimport css from './MovieDetails.module.css'\nimport {Outlet, useParams, useNavigate, useLocation} from 'react-router-dom';\nimport  BackButton  from \"components/BackButton/BackButton\";\nimport * as moviesAPI from 'services/Api';\nimport { NavLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\n\nexport default function MovieDetails() {\n   \n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    const navigate = useNavigate();\n\n    const location = useLocation();\n  \n    useEffect(() => {\n      moviesAPI.getMoviesById(movieId).then(response => setMovie(response));\n    }, [movieId]);\n\n    const poster = poster_path => {\n      return !poster_path\n      ? 'https://i.postimg.cc/G2jSRfZG/images.png'\n      : `https://image.tmdb.org/t/p/w300${poster_path}`;\n    };\n  \n\n    \n    const allGenres = genres => {\n      if (!genres) {\n        return;\n      }\n      return genres.map(genre => genre.name).join(', ');\n    };\n  \n    const onBtnClick = () => {\n \n      location.state\n        ? navigate(location.state.pathname + location.state.search)\n        : navigate('/');\n    };\n\n    return (\n        <div className={css.movieDetails} >       \n          {movie && (\n            <div className={css.movieDetails__block}>\n                <BackButton\n                    onClick={onBtnClick}\n                    nameBtn={'go BACK'}\n                    key={movie.id}\n                    width=\"100px\"\n                />\n                <div>\n                    <div className={css.movieCard}>\n                        <div className={css.movieCard__block}>\n                            <img\n                            className={css.movieCard__img}\n                            src={`${poster(movie.poster_path)}`}\n                            alt={movie.title}\n                            key={movie.id}\n                            />\n                            <div className={css.movieCard__list}>\n                                <h2  className={css.movieCard__header}>\n                                {movie.title} ({movie.release_date.slice(0, 4)})\n                                </h2>\n                                <p className={css.movieCard__text}>Use Score: {Math.round((movie.vote_average / 10) * 100)}%</p>\n                                <h3 className={css.movieCard__header}>Overwiew</h3>\n                                <p className={css.movieCard__text}>{movie.overview}</p>\n                                <h3 className={css.movieCard__header}>Genres</h3>\n                                <p className={css.movieCard__text}>{`${allGenres(movie.genres)}`}</p>\n                            </div>\n                        </div>\n                        <div className={css.movieCard__additionalBlock}>\n                            <h2> Additional information </h2>\n                            <div className={css.movieCard__additional}>\n                                <NavLink to={`/movies/${movie.id}/cast`} state={location.state}>\n                                    <p className={css.movieCard__additionalText}>Cast</p>\n                                </NavLink>\n                                <NavLink to={`/movies/${movie.id}/reviews`} state={location.state}>\n                                <p className={css.movieCard__additionalText}>Reviews</p>\n                                </NavLink>\n                            </div>\n                        </div>\n                    </div>\n              <Outlet />\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n}\n\n\n/*return(\n    <div className={css.movieCard}>\n        <div className={css.movieCard__block}>\n            <img\n                className={css.movieCard__img}\n                src ={\n                   poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : 'https://i.postimg.cc/G2jSRfZG/images.png'\n                }\n                alt={title ? title : name}\n            />\n       \n            <div className={css.movieCard__list}>\n                <h2  className={css.movieCard__header}>\n                    {title ? title : name} ({release_date.slice(0, 4)})\n                </h2>\n                <p className={css.movieCard__text}>Use Score: {Math.round((vote_average / 10) * 100)}%</p>\n                <h3 className={css.movieCard__header}>Overwiew</h3>\n                <p className={css.movieCard__text}>{overview}</p>\n                <h3 className={css.movieCard__header}>Genres</h3>\n                <p className={css.movieCard__text}>{genres.map(item => item.name).join(' ,')}</p>\n            </div>\n        </div>\n    </div>\n)*/","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0069cb276a083aad6acda19b3adb7038';\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n// гет-запит  по  пошуку фільму\nexport function getMovieBySearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n// гет-запит для актерського складу\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n//  гет=запит для оглядів чи відкугів на фільм\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n//  гет-запит популярних фільмів\nexport function GetTrending() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n// гет-запит про інфо фільму по айді\nexport function getMoviesById(movieId) {\n  // а тут наоборот єкспанд автор - когда мі забираем одну книжку, мі прикрепляем к ней ее автора, тоже по айдишнику\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}"],"names":["BackButton","onClick","nameBtn","type","className","css","MovieDetails","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","moviesAPI","then","response","poster_path","state","pathname","search","width","id","src","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","join","allGenres","to","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","getReviews","GetTrending","getMoviesById"],"sourceRoot":""}