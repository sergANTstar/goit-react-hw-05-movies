{"version":3,"file":"static/js/81.0de7abef.chunk.js","mappings":"uMACA,EAA4B,wBAA5B,EAAsE,8BAAtE,EAAqH,6BAArH,EAAqK,+B,oCCKtJ,SAASA,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MAGjB,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,MAAK,SAAAC,GAAQ,OAAIJ,EAAUI,EAASC,QAAvB,GACtC,GAAE,IASH,OACE,yBACGN,IACC,eAAIO,UAAWC,EAAf,SACGR,EAAOS,KAAI,SAAAC,GAAK,OACf,eAAmBH,UAAWC,EAA9B,UACE,UAAC,KAAD,CAAMG,GAAE,kBAAaD,EAAME,IAAMC,MAAOhB,EAAxC,WACI,gBACEiB,IAAG,WAdNC,EAckBL,EAAMK,YAb1BA,EAAD,yCAE4BA,GADlC,6CAaYC,IAAKN,EAAMO,MACXV,UAAWC,KAEb,eAAID,UAAWC,EAAf,SAAsCE,EAAMO,YAPzCP,EAAME,IAXV,IAAAG,CAUU,OAgB1B,C,sLC3CGG,EAAW,+BACXC,EAAU,mCAAhB,SACeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAA6BC,EAA7B,+BAAmC,GAAIC,EAAvC,+BAAgD,CAAC,EAAjD,SACyBC,MAAMF,EAAKC,GADpC,YACQjB,EADR,QAEkBmB,GAFlB,iCAGYnB,EAASoB,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,EAAiBC,GAC/B,OAAOV,EAAc,GAAD,OACfF,EADe,gCACiBY,EADjB,oBACkCX,EADlC,8CAGrB,CAEM,SAASY,EAAQC,GACtB,OAAOZ,EAAc,GAAD,OACfF,EADe,kBACGc,EADH,4BAC8Bb,EAD9B,mBAGrB,CAEM,SAASc,EAAWD,GACzB,OAAOZ,EAAc,GAAD,OACfF,EADe,kBACGc,EADH,4BAC8Bb,EAD9B,0BAGrB,CAEM,SAASe,IACd,OAAOd,EAAc,GAAD,OACfF,EADe,uCACwBC,GAE7C,CAEM,SAASgB,EAAcH,GAE5B,OAAOZ,EAAc,GAAD,OACfF,EADe,kBACGc,EADH,oBACsBb,GAE3C,C","sources":["webpack://goit-react-hw-05-movies/./src/page/Home/Home.module.css?aa7f","page/Home/Home.jsx","services/Api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"moviaList\":\"Home_moviaList__x0EWP\",\"moviaList__item\":\"Home_moviaList__item__KDggO\",\"moviaList__img\":\"Home_moviaList__img__rp3lU\",\"moviaList__title\":\"Home_moviaList__title__rexZv\"};","import { useEffect, useState } from \"react\";\nimport css from './Home.module.css'\nimport * as moviesAPI from 'services/Api';\nimport { Link, useLocation } from 'react-router-dom';\n\n\nexport default function Home() {\n\n    const location = useLocation();\n    \n\n    const [movies, setMovies] = useState(null);\n\n    useEffect(() => {\n      moviesAPI.GetTrending().then(response => setMovies(response.results));\n    }, []);\n\n    \n    const poster = poster_path => {\n         return !poster_path\n        ? 'https://i.postimg.cc/G2jSRfZG/images.png'\n        : `https://image.tmdb.org/t/p/w300${poster_path}`;\n    };\n  \n    return (\n      <div>\n        {movies && (\n          <ul className={css.moviaList}>\n            {movies.map(movie => (\n              <li key={movie.id} className={css.moviaList__item}>\n                <Link to={`/movies/${movie.id}`} state={location}>\n                    <img\n                      src={`${poster(movie.poster_path)}`}\n                      alt={movie.title}\n                      className={css.moviaList__img}\n                    />\n                    <h2 className={css.moviaList__title}>{movie.title}</h2>\n                </Link>\n              </li>\n            ))}\n            </ul>\n        )}\n      </div>\n    );\n  }\n","\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0069cb276a083aad6acda19b3adb7038';\nasync function fetchHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function getMovieBySearch(query) {\n  return fetchHandling(\n    `${BASE_URL}/search/movie?&query=${query}&api_key=${API_KEY}&language=en-US&page=1&include_adult=false`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\n\nexport function GetTrending() {\n  return fetchHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function getMoviesById(movieId) {\n\n  return fetchHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}"],"names":["Home","location","useLocation","useState","movies","setMovies","useEffect","moviesAPI","then","response","results","className","css","map","movie","to","id","state","src","poster_path","alt","title","BASE_URL","API_KEY","fetchHandling","url","config","fetch","ok","json","Promise","reject","Error","getMovieBySearch","query","getCast","movieId","getReviews","GetTrending","getMoviesById"],"sourceRoot":""}